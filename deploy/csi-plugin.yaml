##############################################
###########                       ############
###########   Controller plugin   ############
###########                       ############
##############################################

kind: StatefulSet
apiVersion: apps/v1beta1
metadata:
  name: csi-controller
  namespace: kube-system
spec:
  serviceName: "csi-do"
  replicas: 1
  template:
    metadata:
      labels:
        app: csi-controller
        role: csi-do
    spec:
      serviceAccount: csi-controller-sa
      containers:
        - name: csi-provisioner
          image: hub.kce.ksyun.com/ksyun/csi-provisioner:v0.4.2
          args:
            - "--provisioner=com.ksc.csi.diskplugin"
            - "--feature-gates=Topology=true"
            - "--csi-address=$(ADDRESS)"
            - "--v=5"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          imagePullPolicy: "Always"
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: csi-attacher
          image: hub.kce.ksyun.com/ksyun/csi-attacher:v0.4.2
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          imagePullPolicy: "Always"
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: csi-diskplugin
          image: hub.kce.ksyun.com/ksyun/csi-diskplugin:v0.1.1-mp
          args :
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--controller-server=true"
            - "--v=5"
            - "--alsologtostderr=true"
          env:
            - name: CSI_ENDPOINT
              value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
          imagePullPolicy: "Always"
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
            - name: cluster-info-dir
              mountPath: /opt/app-agent/arrangement
      volumes:
        - name: socket-dir
          emptyDir: {}
        - name: cluster-info-dir
          hostPath:
            path: /opt/app-agent/arrangement
            type: Directory
---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-controller-sa
  namespace: kube-system

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-do-provisioner-role
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list"]

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-do-provisioner-binding
subjects:
  - kind: ServiceAccount
    name: csi-controller-sa
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: csi-do-provisioner-role
  apiGroup: rbac.authorization.k8s.io

---
# Attacher must be able to work with PVs, nodes and VolumeAttachments

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-do-attacher-role
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "update"]
  
---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-do-attacher-binding
subjects:
  - kind: ServiceAccount
    name: csi-controller-sa
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: csi-do-attacher-role
  apiGroup: rbac.authorization.k8s.io

---


########################################
###########                 ############
###########   Node plugin   ############
###########                 ############
#######################################

kind: DaemonSet
apiVersion: apps/v1beta2
metadata:
  name: csi-diskplugin
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: csi-diskplugin
  template:
    metadata:
      labels:
        app: csi-diskplugin
        role: csi-do
    spec:
      serviceAccount: csi-diskplugin-sa
      hostNetwork: true
      containers:
        - name: driver-registrar
          image: hub.kce.ksyun.com/ksyun/driver-registrar:v0.4.2
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
            - "--mode=node-register"
            - "--driver-requires-attachment=true"
            - "--pod-info-mount-version=\"v1\""
            - "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: DRIVER_REG_SOCK_PATH
              value: /data/kubelet/plugins/com.ksc.csi.diskplugin/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi/
            - name: registration-dir
              mountPath: /registration/
        - name: csi-diskplugin
          image: hub.kce.ksyun.com/ksyun/csi-diskplugin:v0.1.1-mp
          args :
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--node-server=true"
            - "--v=5"
            - "--alsologtostderr=true"
          env:
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          imagePullPolicy: "Always"
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
            - name: pods-mount-dir
              mountPath: /data/kubelet
              # needed so that any mounts setup inside this container are
              # propagated back to the host machine.
              mountPropagation: "Bidirectional"
            - name: device-dir
              mountPath: /dev
            - name: cluster-info-dir
              mountPath: /opt/app-agent/arrangement
      volumes:
        - name: registration-dir
          hostPath:
            path: /data/kubelet/plugins/
            type: DirectoryOrCreate
        - name: plugin-dir
          hostPath:
            path: /data/kubelet/plugins/com.ksc.csi.diskplugin
            type: DirectoryOrCreate
        - name: pods-mount-dir
          hostPath:
            path: /data/kubelet
            type: Directory
        - name: device-dir
          hostPath:
            path: /dev
        - name: cluster-info-dir
          hostPath:
            path: /opt/app-agent/arrangement
            type: Directory
---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-diskplugin-sa
  namespace: kube-system

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-do-driver-registrar-role
  namespace: kube-system
rules:
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "update"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list"]

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-do-driver-registrar-binding
  namespace: kube-system
subjects:
  - kind: ServiceAccount
    name: csi-diskplugin-sa
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: csi-do-driver-registrar-role
  apiGroup: rbac.authorization.k8s.io          
